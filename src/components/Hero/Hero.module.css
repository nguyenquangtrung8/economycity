/* src/components/Hero/Hero.module.css */

/* === KEYFRAMES ZOOM-IN === */
@keyframes zoomIn {
    0% {
      transform: scale(1); /* Bắt đầu với kích thước bình thường */
    }
    100% {
      transform: scale(1.2); /* Phóng to lên 1.2 lần */
    }
  }
  
  /* === CURSOR BLINK === */
  @keyframes blink {
    0%, 100% { 
      opacity: 1; 
    }
    50% { 
      opacity: 0; 
    }
  }
  
  /* === PULSE ANIMATION === */
  @keyframes pulse {
    0% {
      transform: scale(0.95);
      box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.7);
    }
    70% {
      transform: scale(1);
      box-shadow: 0 0 0 10px rgba(255, 255, 255, 0);
    }
    100% {
      transform: scale(0.95);
      box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);
    }
  }
  
  /* === KHỐI CHÍNH === */
  .hero {
    position: relative;
    height: 100vh; /* Chiều cao toàn màn hình */
    width: 100%;
    display: flex;
    align-items: center; /* Canh giữa theo chiều dọc */
    background-color: var(--neutral-black, #212529); /* Màu nền tối */
    color: var(--neutral-white, #ffffff); /* Màu chữ trắng */
    overflow: hidden; /* Ẩn phần thừa */
  }
  
  /* === HÌNH NỀN === */
  .heroBackground {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover; /* Cân chỉnh hình ảnh phủ kín */
    opacity: 0.7; /* Độ mờ 30% */
    z-index: 0; /* Layer dưới cùng */
    animation: zoomIn 20s ease-in-out infinite alternate !important; /* Thêm !important để ghi đè */
    will-change: transform; /* Cải thiện performance của animation */
    transform-origin: center center; /* Zoom từ giữa ra */
  }
  
  /* === LỚP OVERLAY === */
  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* Gradient từ đen 40% ở trên xuống 70% ở dưới */
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.7));
    z-index: 1; /* Trên lớp hình nền */
  }
  
  /* === CONTAINER CHÍNH === */
  .container {
    position: relative;
    z-index: 3; /* Trên các lớp overlay */
    padding-top: var(--spacing-10, 4rem); /* Khoảng cách đầu trang */
    width: 100%;
  }
  
  /* === NỘI DUNG === */
  .content {
    max-width: 700px; /* Giới hạn chiều rộng */
    margin: 0 auto; /* Canh giữa */
    text-align: center; /* Căn lề giữa cho text */
  }
  
  /* === TIÊU ĐỀ CHÍNH === */
  .title {
    font-size: var(--font-size-3xl, 2.25rem); /* Cỡ chữ lớn */
    font-weight: var(--font-weight-bold, 700); /* In đậm */
    margin-bottom: var(--spacing-4, 1rem); /* Khoảng cách dưới tiêu đề */
    color: var(--neutral-white, #ffffff); /* Màu trắng */
  }
  
  /* === KHỐI HIỆU ỨNG GÕ CHỮ === */
  .typingContainer {
    position: relative;
    margin-bottom: var(--spacing-6, 2rem); /* Khoảng cách dưới */
    min-height: 48px; /* Chiều cao tối thiểu */
  }
  
  /* === SUBTITLE VỚI HIỆU ỨNG === */
  .subtitle {
    font-size: var(--font-size-lg, 1.25rem); /* Cỡ chữ trung bình lớn */
    color: var(--neutral-lighter, #e9ecef); /* Màu xám nhạt */
    margin-bottom: 0; /* Không có margin dưới */
  }
  
  /* === TEXT HIỆU ỨNG === */
  .typingText {
    display: inline-block;
    transition: opacity 0.5s ease; /* Hiệu ứng mờ dần */
  }
  
  /* === HIỆU ỨNG MỜ DẦN === */
  .fadeOut {
    opacity: 0; /* Biến mất sau 0.5s */
  }
  
  /* === CON TRỎ GÕ CHỮ === */
  .cursor {
    display: inline-block;
    width: 2px; /* Độ rộng 2px */
    height: 1em; /* Cao bằng 1 dòng text */
    background: var(--neutral-white, #ffffff); /* Màu trắng */
    margin-left: 2px; /* Khoảng cách với chữ */
    animation: blink 1s infinite; /* Nhấp nháy mỗi giây */
    vertical-align: text-bottom; /* Căn chỉnh với text */
  }
  
  /* === THÔNG TIN VỊ TRÍ === */
  .location {
    display: flex;
    align-items: center; /* Canh giữa theo chiều dọc */
    justify-content: center; /* Canh giữa theo chiều ngang */
    margin-bottom: var(--spacing-6, 2rem); /* Khoảng cách dưới */
    color: var(--neutral-light, #dee2e6); /* Màu xám */
    font-size: var(--font-size-md, 1.125rem); /* Cỡ chữ trung bình */
  }
  
  /* === ICON VỊ TRÍ === */
  .locationIcon {
    margin-right: var(--spacing-2, 0.5rem); /* Khoảng cách với text */
    flex-shrink: 0; /* Không thu nhỏ icon */
  }
  
  /* === NHÓM NÚT === */
  .buttonsContainer {
    margin-bottom: var(--spacing-6, 2rem); /* Khoảng cách dưới */
    display: flex;
    justify-content: center; /* Canh giữa */
    gap: var(--spacing-4, 1rem); /* Khoảng cách giữa các nút */
    flex-wrap: wrap; /* Cho phép wrap trên màn hình nhỏ */
  }
  
  /* === NÚT CHÍNH === */
  .ctaButton {
    display: inline-block;
    padding: var(--spacing-3, 0.75rem) var(--spacing-6, 2rem); /* Padding nội dung */
    background-color: var(--primary-color, #2a6f97); /* Màu chính */
    color: var(--neutral-white, #ffffff); /* Chữ trắng */
    font-weight: var(--font-weight-medium, 500); /* Độ đậm trung bình */
    font-size: var(--font-size-md, 1.125rem); /* Cỡ chữ */
    border-radius: var(--border-radius, 0.25rem); /* Bo góc */
    text-decoration: none; /* Bỏ gạch chân */
    transition: background-color 0.3s ease, transform 0.3s ease; /* Hiệu ứng màu nền */
  }
  
  .ctaButton:hover, .ctaButton:focus {
    background-color: var(--primary-dark, #0a4d7f); /* Màu tối hơn khi hover/focus */
    transform: translateY(-2px); /* Hiệu ứng nâng lên */
    text-decoration: none; /* Giữ không có gạch chân */
    color: var(--neutral-white, #ffffff); /* Giữ màu trắng */
  }
  
  .ctaButton:active {
    transform: translateY(0); /* Hiệu ứng nhấn xuống */
  }
  
  /* === NÚT PHỤ === */
  .secondaryButton {
    display: inline-block;
    padding: var(--spacing-3, 0.75rem) var(--spacing-6, 2rem);
    background-color: transparent; /* Nền trong suốt */
    color: var(--neutral-white, #ffffff);
    font-weight: var(--font-weight-medium, 500);
    font-size: var(--font-size-md, 1.125rem);
    border: 2px solid var(--neutral-white, #ffffff); /* Viền trắng */
    border-radius: var(--border-radius, 0.25rem);
    text-decoration: none;
    transition: all 0.3s ease; /* Hiệu ứng tổng thể */
  }
  
  .secondaryButton:hover, .secondaryButton:focus {
    background-color: var(--neutral-white, #ffffff); /* Nền trắng khi hover/focus */
    color: var(--neutral-black, #212529); /* Chữ đen */
    transform: translateY(-2px); /* Hiệu ứng nâng lên */
    text-decoration: none; /* Giữ không có gạch chân */
  }
  
  .secondaryButton:active {
    transform: translateY(0); /* Hiệu ứng nhấn xuống */
  }
  
  /* === NÚT CUỘN XUỐNG === */
  .scrollIndicator {
    position: absolute;
    bottom: var(--spacing-6, 2rem); /* Cách đáy 6 đơn vị */
    left: 50%; /* Canh giữa */
    transform: translateX(-50%); /* Dịch chỉnh vị trí */
    width: 40px; /* Fixed width for better touch target */
    height: 40px; /* Fixed height for better touch target */
    border-radius: 50%; /* Circular shape */
    background-color: rgba(255, 255, 255, 0.1); /* Slight background for better visibility */
    display: flex;
    align-items: center;
    justify-content: center;
    animation: pulse 2s infinite; /* Hiệu ứng nảy */
    z-index: 4; /* Trên các lớp khác */
    cursor: pointer; /* Biến con trỏ thành bàn tay */
    transition: background-color 0.3s ease; /* Smooth transition */
  }
  
  .scrollIndicator:hover, .scrollIndicator:focus {
    background-color: rgba(255, 255, 255, 0.2); /* Brighter on hover/focus */
    outline: none; /* Remove default focus outline */
  }
  
  .scrollIndicator:focus-visible {
    outline: 2px solid var(--neutral-white, #ffffff); /* Add outline only for keyboard focus */
    outline-offset: 2px;
  }
  
  /* === KHỐI THỐNG KÊ === */
  .statsContainerBelow {
    margin-top: var(--spacing-8, 3rem); /* Khoảng cách trên */
    padding: var(--spacing-6, 2rem) 0; /* Padding dọc */
    border-radius: var(--border-radius, 0.25rem); /* Bo góc */
  }
  
  /* === GRID THỐNG KÊ === */
  .statsGrid {
    display: grid;
    grid-template-columns: repeat(2, 1fr); /* 2 cột trên mobile */
    gap: var(--spacing-4, 1rem); /* Khoảng cách giữa các card */
    max-width: 1200px; /* Giới hạn chiều rộng */
    margin: 0 auto; /* Canh giữa */
    padding: 0 var(--spacing-4, 1rem); /* Padding ngang */
  }
  
  /* === CARD THỐNG KÊ === */
  .statCard {
    background: rgba(255, 255, 255, 0.05); /* Nền trắng mờ */
    padding: var(--spacing-4, 1rem); /* Padding nội dung */
    border-radius: var(--border-radius, 0.25rem); /* Bo góc */
    transition: all 0.3s ease; /* Hiệu ứng mượt */
    text-align: center; /* Căn giữa text */
  }
  
  .statCard:hover {
    background: rgba(255, 255, 255, 0.08); /* Nền sáng hơn khi hover */
    transform: translateY(-5px); /* Dịch lên 5px */
    box-shadow: 0 5px 15px rgba(0,0,0,0.1); /* Đổ bóng */
  }
  
  /* === GIÁ TRỊ THỐNG KÊ === */
  .statValue {
    font-size: 2.5rem; /* Cỡ chữ lớn */
    font-weight: var(--font-weight-bold, 700); /* In đậm */
    color: #f9d925; /* Màu vàng trang sức */
    margin-bottom: var(--spacing-2, 0.5rem); /* Khoảng cách dưới */
    font-family: var(--font-family-heading, 'Montserrat', sans-serif); /* Font chữ */
  }
  
  /* === NHÃN THỐNG KÊ === */
  .statLabel {
    font-size: var(--font-size-md, 1.125rem); /* Cỡ chữ trung bình */
    color: var(--neutral-lightest, #f8f9fa); /* Light gray color */
  }
  
  /* === RESPONSIVE DESIGN === */
  @media (min-width: 768px) {
    .title {
      font-size: var(--font-size-4xl, 3rem); /* Cỡ chữ lớn hơn trên màn hình rộng */
    }
    
    .subtitle {
      font-size: var(--font-size-xl, 1.5rem); /* Cỡ chữ lớn hơn */
    }
  
    .statsGrid {
      grid-template-columns: repeat(4, 1fr); /* 4 cột trên desktop */
    }
    
    .buttonsContainer {
      margin-bottom: var(--spacing-8, 3rem); /* Khoảng cách lớn hơn */
    }
  }
  /* === RESPONSIVE DESIGN CHO MOBILE === */
@media (max-width: 767px) {
  .subtitle {
      font-size: 1.2rem; /* Giảm cỡ chữ trên mobile */
  }
}
  
  /* Chỉ vô hiệu hóa animation cho người dùng thực sự cần */
  @media (prefers-reduced-motion: reduce) {
    /* Chúng ta vẫn giữ animation zoom của background */
    .scrollIndicator {
      animation: none; /* Disable pulse animation */
    }
    
    .cursor {
      animation: none; /* Disable cursor blinking */
    }
    
    .typingText, .fadeOut {
      transition: none; /* Disable typing transitions */
    }
    
    .ctaButton, .secondaryButton, .statCard {
      transition: none; /* Disable all transitions */
    }
  }